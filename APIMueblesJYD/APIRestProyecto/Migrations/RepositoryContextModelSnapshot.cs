// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace APIRestProyecto.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CargoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("NombreCargo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("CargoId");

                    b.ToTable("Cargos");

                    b.HasData(
                        new
                        {
                            CargoId = 1,
                            Estado = 1,
                            NombreCargo = "Carpintero"
                        },
                        new
                        {
                            CargoId = 2,
                            Estado = 1,
                            NombreCargo = "Diseñador de Muebles"
                        },
                        new
                        {
                            CargoId = 3,
                            Estado = 1,
                            NombreCargo = "Vendedor de Muebles"
                        },
                        new
                        {
                            CargoId = 4,
                            Estado = 1,
                            NombreCargo = "Técnico de Acabados"
                        },
                        new
                        {
                            CargoId = 5,
                            Estado = 1,
                            NombreCargo = "Asistente de carpinteria"
                        });
                });

            modelBuilder.Entity("Entities.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Estado = 1,
                            Nombre = "Muebles"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Estado = 1,
                            Nombre = "Camas"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Estado = 1,
                            Nombre = "Mesas de Noche"
                        },
                        new
                        {
                            IdCategoria = 4,
                            Estado = 1,
                            Nombre = "Comedores"
                        },
                        new
                        {
                            IdCategoria = 5,
                            Estado = 1,
                            Nombre = "Escritorios"
                        },
                        new
                        {
                            IdCategoria = 6,
                            Estado = 1,
                            Nombre = "Sillas"
                        },
                        new
                        {
                            IdCategoria = 7,
                            Estado = 1,
                            Nombre = "Armarios"
                        },
                        new
                        {
                            IdCategoria = 8,
                            Estado = 1,
                            Nombre = "Camarotes"
                        });
                });

            modelBuilder.Entity("Entities.Models.ContactoEmpleado", b =>
                {
                    b.Property<int>("IdContactoEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdContactoEmpleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContactoEmpleado"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("IdContactoEmpleado");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("ContactoEmpleados");

                    b.HasData(
                        new
                        {
                            IdContactoEmpleado = 1,
                            Direccion = "Cra15B #13-52",
                            Email = "ContactoE1@gmail.com",
                            EmpleadoId = 1,
                            FechaCreacion = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Telefono = 312546845
                        },
                        new
                        {
                            IdContactoEmpleado = 2,
                            Direccion = "Av. 7 de Septiembre #25-10",
                            Email = "ContactoE2@gmail.com",
                            EmpleadoId = 2,
                            FechaCreacion = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Telefono = 315874920
                        },
                        new
                        {
                            IdContactoEmpleado = 3,
                            Direccion = "Calle 24 #18-15",
                            Email = "ContactoE3@gmail.com",
                            EmpleadoId = 3,
                            FechaCreacion = new DateTime(2023, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Telefono = 318657489
                        },
                        new
                        {
                            IdContactoEmpleado = 4,
                            Direccion = "Cra 10A #5-30",
                            Email = "ContactoE4@gmail.com",
                            EmpleadoId = 4,
                            FechaCreacion = new DateTime(2023, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Telefono = 314985632
                        },
                        new
                        {
                            IdContactoEmpleado = 5,
                            Direccion = "Cra 20 #8-45",
                            Email = "ContactoE5@gmail.com",
                            EmpleadoId = 5,
                            FechaCreacion = new DateTime(2023, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Telefono = 317654987
                        });
                });

            modelBuilder.Entity("Entities.Models.ContactoProveedor", b =>
                {
                    b.Property<int>("IdContactoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdContactoProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContactoProveedor"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("NombreProv")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("IdContactoProveedor");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ContactoProveedorConfigurations");

                    b.HasData(
                        new
                        {
                            IdContactoProveedor = 1,
                            Email = "ContactP1@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2020, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 1,
                            NombreProv = "Sam Raiden",
                            Telefono = 314526948
                        },
                        new
                        {
                            IdContactoProveedor = 2,
                            Email = "ContactP2@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 2,
                            NombreProv = "Laura Montoya",
                            Telefono = 310987654
                        },
                        new
                        {
                            IdContactoProveedor = 3,
                            Email = "ContactP3@gmail.com",
                            Estado = 2,
                            FechaAlta = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 3,
                            NombreProv = "Carlos Rivera",
                            Telefono = 317895623
                        },
                        new
                        {
                            IdContactoProveedor = 4,
                            Email = "ContactP4@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2023, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 4,
                            NombreProv = "Elena Gómez",
                            Telefono = 312589764
                        },
                        new
                        {
                            IdContactoProveedor = 5,
                            Email = "ContactP5@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2022, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 5,
                            NombreProv = "Ana Martínez",
                            Telefono = 319875634
                        },
                        new
                        {
                            IdContactoProveedor = 6,
                            Email = "ContactP6@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2021, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 6,
                            NombreProv = "Juan Soto",
                            Telefono = 316547896
                        },
                        new
                        {
                            IdContactoProveedor = 7,
                            Email = "ContactP7@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2020, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 7,
                            NombreProv = "María Salas",
                            Telefono = 318564237
                        },
                        new
                        {
                            IdContactoProveedor = 8,
                            Email = "ContactP8@gmail.com",
                            Estado = 2,
                            FechaAlta = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 8,
                            NombreProv = "Luis Gutiérrez",
                            Telefono = 313258741
                        },
                        new
                        {
                            IdContactoProveedor = 9,
                            Email = "ContactP9@gmail.com",
                            Estado = 1,
                            FechaAlta = new DateTime(2022, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaBaja = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 9,
                            NombreProv = "Fernando López",
                            Telefono = 317896542
                        });
                });

            modelBuilder.Entity("Entities.Models.ContactoUsuario", b =>
                {
                    b.Property<int>("IdContactoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdContactoCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContactoCliente"));

                    b.Property<string>("Barrio_Localidad")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("IndicativoCiudad")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("NumeroTelefonico")
                        .HasColumnType("int");

                    b.Property<string>("TipoTelefono")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdContactoCliente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ContactoUsuarioConfigurations");

                    b.HasData(
                        new
                        {
                            IdContactoCliente = 1,
                            Barrio_Localidad = "Usme",
                            Ciudad = "Bogotá D.C.",
                            Direccion = "Cra 12C #53-08",
                            Email = "ContactoC1@gmail.com",
                            IdUsuario = 1,
                            IndicativoCiudad = "601",
                            NumeroTelefonico = 5614248,
                            TipoTelefono = "Fijo"
                        },
                        new
                        {
                            IdContactoCliente = 2,
                            Barrio_Localidad = "El Poblado",
                            Ciudad = "Medellín",
                            Direccion = "Av. 7 de Septiembre #25-10",
                            Email = "ContactoC2@gmail.com",
                            IdUsuario = 2,
                            IndicativoCiudad = "301",
                            NumeroTelefonico = 315874920,
                            TipoTelefono = "Celular"
                        },
                        new
                        {
                            IdContactoCliente = 3,
                            Barrio_Localidad = "San Fernando",
                            Ciudad = "Cali",
                            Direccion = "Calle 24 #18-15",
                            Email = "ContactoC3@gmail.com",
                            IdUsuario = 3,
                            IndicativoCiudad = "571",
                            NumeroTelefonico = 317895623,
                            TipoTelefono = "Fijo"
                        },
                        new
                        {
                            IdContactoCliente = 4,
                            Barrio_Localidad = "Granada",
                            Ciudad = "Cali",
                            Direccion = "Cra 10A #5-30",
                            Email = "ContactoC4@gmail.com",
                            IdUsuario = 4,
                            IndicativoCiudad = "571",
                            NumeroTelefonico = 318564237,
                            TipoTelefono = "Celular"
                        });
                });

            modelBuilder.Entity("Entities.Models.DetalleFacturaCompra", b =>
                {
                    b.Property<int>("IdDetalleacturaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDetalleacturaCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleacturaCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<float>("IVA")
                        .HasColumnType("real");

                    b.Property<int>("IdFacturaCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<float>("ValorDescuento")
                        .HasColumnType("real");

                    b.Property<float>("ValorUnitario")
                        .HasColumnType("real");

                    b.HasKey("IdDetalleacturaCompra");

                    b.HasIndex("IdFacturaCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleFacturaCompra");

                    b.HasData(
                        new
                        {
                            IdDetalleacturaCompra = 1,
                            Cantidad = 2,
                            IVA = 0.3f,
                            IdFacturaCompra = 1,
                            IdProducto = 1,
                            ValorDescuento = 0.05f,
                            ValorUnitario = 250000f
                        },
                        new
                        {
                            IdDetalleacturaCompra = 2,
                            Cantidad = 4,
                            IVA = 0.3f,
                            IdFacturaCompra = 2,
                            IdProducto = 2,
                            ValorDescuento = 0.05f,
                            ValorUnitario = 500000f
                        });
                });

            modelBuilder.Entity("Entities.Models.DetalleFacturaVenta", b =>
                {
                    b.Property<int>("DetalleFacturaVentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetalleFacturaVentaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleFacturaVentaID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaCompraIdFacturaCompra")
                        .HasColumnType("int");

                    b.Property<int?>("FacturasVentaIdFacturaVenta")
                        .HasColumnType("int");

                    b.Property<float>("IVA")
                        .HasColumnType("real");

                    b.Property<int>("IdFacturaVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<float>("ValorDescuento")
                        .HasColumnType("real");

                    b.Property<float>("ValorUnitario")
                        .HasColumnType("real");

                    b.HasKey("DetalleFacturaVentaID");

                    b.HasIndex("FacturaCompraIdFacturaCompra");

                    b.HasIndex("FacturasVentaIdFacturaVenta");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetallesFacturaVentas");

                    b.HasData(
                        new
                        {
                            DetalleFacturaVentaID = 1,
                            Cantidad = 2,
                            IVA = 8075f,
                            IdFacturaVenta = 1,
                            IdProducto = 1,
                            ValorDescuento = 0f,
                            ValorUnitario = 42500f
                        },
                        new
                        {
                            DetalleFacturaVentaID = 2,
                            Cantidad = 2,
                            IVA = 1534f,
                            IdFacturaVenta = 2,
                            IdProducto = 2,
                            ValorDescuento = 0f,
                            ValorUnitario = 60000f
                        });
                });

            modelBuilder.Entity("Entities.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            EmpleadoId = 1,
                            Apellidos = "González",
                            Estado = 1,
                            FechaNacimiento = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "Ana María",
                            Sexo = "Femenino"
                        },
                        new
                        {
                            EmpleadoId = 2,
                            Apellidos = "Ramírez",
                            Estado = 1,
                            FechaNacimiento = new DateTime(1987, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "Carlos Alberto",
                            Sexo = "Masculino"
                        },
                        new
                        {
                            EmpleadoId = 3,
                            Apellidos = "López",
                            Estado = 1,
                            FechaNacimiento = new DateTime(1999, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "Laura",
                            Sexo = "Femenino"
                        },
                        new
                        {
                            EmpleadoId = 4,
                            Apellidos = "Hernández",
                            Estado = 1,
                            FechaNacimiento = new DateTime(1983, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "Roberto",
                            Sexo = "Masculino"
                        },
                        new
                        {
                            EmpleadoId = 5,
                            Apellidos = "Martínez",
                            Estado = 1,
                            FechaNacimiento = new DateTime(2001, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombres = "María José",
                            Sexo = "Femenino"
                        });
                });

            modelBuilder.Entity("Entities.Models.EmpleadoCargo", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CargoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("FechaFin")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumeroContrato")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId", "CargoId");

                    b.HasIndex("CargoId");

                    b.ToTable("EmpleadoCargos");

                    b.HasData(
                        new
                        {
                            EmpleadoId = 1,
                            CargoId = 1,
                            FechaFin = new DateTime(2015, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroContrato = 1
                        },
                        new
                        {
                            EmpleadoId = 2,
                            CargoId = 2,
                            FechaFin = new DateTime(2010, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2000, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroContrato = 2
                        },
                        new
                        {
                            EmpleadoId = 3,
                            CargoId = 3,
                            FechaFin = new DateTime(2010, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2005, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroContrato = 3
                        },
                        new
                        {
                            EmpleadoId = 4,
                            CargoId = 4,
                            FechaFin = new DateTime(2010, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2012, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroContrato = 4
                        },
                        new
                        {
                            EmpleadoId = 5,
                            CargoId = 5,
                            FechaFin = new DateTime(2018, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2010, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumeroContrato = 5
                        });
                });

            modelBuilder.Entity("Entities.Models.FacturaCompra", b =>
                {
                    b.Property<int>("IdFacturaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdFacturaCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFacturaCompra"));

                    b.Property<DateTime?>("FechaExpedicion")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaGeneracion")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("NFactura")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedoresIdProveedor")
                        .HasColumnType("int");

                    b.Property<float>("TotalBruto")
                        .HasColumnType("real");

                    b.Property<float>("TotalIVA")
                        .HasColumnType("real");

                    b.Property<float>("TotalPago")
                        .HasColumnType("real");

                    b.Property<float>("TotalRefuete")
                        .HasColumnType("real");

                    b.HasKey("IdFacturaCompra");

                    b.HasIndex("ProveedoresIdProveedor");

                    b.ToTable("FacturasCompras");

                    b.HasData(
                        new
                        {
                            IdFacturaCompra = 1,
                            FechaExpedicion = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaGeneracion = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaVencimiento = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 1,
                            NFactura = 1,
                            TotalBruto = 100000f,
                            TotalIVA = 19000f,
                            TotalPago = 139000f,
                            TotalRefuete = 20000f
                        },
                        new
                        {
                            IdFacturaCompra = 2,
                            FechaExpedicion = new DateTime(2000, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaGeneracion = new DateTime(2000, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaVencimiento = new DateTime(2000, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProveedor = 2,
                            NFactura = 2,
                            TotalBruto = 150000f,
                            TotalIVA = 2850f,
                            TotalPago = 182850f,
                            TotalRefuete = 30000f
                        });
                });

            modelBuilder.Entity("Entities.Models.FacturaVenta", b =>
                {
                    b.Property<int>("IdFacturaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdFacturaVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFacturaVenta"));

                    b.Property<DateTime?>("FechaExpedicion")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaGeneracion")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("NFactura")
                        .HasColumnType("int");

                    b.Property<float>("TotalBruto")
                        .HasColumnType("real");

                    b.Property<float>("TotalIVA")
                        .HasColumnType("real");

                    b.Property<float>("TotalPago")
                        .HasColumnType("real");

                    b.Property<float>("TotalRefuete")
                        .HasColumnType("real");

                    b.Property<int?>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdFacturaVenta");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("FacturasVentas");

                    b.HasData(
                        new
                        {
                            IdFacturaVenta = 1,
                            FechaExpedicion = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaGeneracion = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaVencimiento = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = 1,
                            NFactura = 1,
                            TotalBruto = 85000f,
                            TotalIVA = 16150f,
                            TotalPago = 113150f,
                            TotalRefuete = 12000f
                        },
                        new
                        {
                            IdFacturaVenta = 2,
                            FechaExpedicion = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaGeneracion = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaVencimiento = new DateTime(2023, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = 2,
                            NFactura = 2,
                            TotalBruto = 120000f,
                            TotalIVA = 22800f,
                            TotalPago = 157800f,
                            TotalRefuete = 15000f
                        });
                });

            modelBuilder.Entity("Entities.Models.HistoricoPrecios", b =>
                {
                    b.Property<int>("IdHistoricoPrecios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHistoricoPrecios");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoricoPrecios"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaPrecioFinal")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPrecioInicial")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<float>("PrecioVenta")
                        .HasColumnType("real");

                    b.HasKey("IdHistoricoPrecios");

                    b.HasIndex("IdProducto");

                    b.ToTable("HistoricosPrecios");

                    b.HasData(
                        new
                        {
                            IdHistoricoPrecios = 1,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 1,
                            PrecioVenta = 42500f
                        },
                        new
                        {
                            IdHistoricoPrecios = 2,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 2,
                            PrecioVenta = 60000f
                        },
                        new
                        {
                            IdHistoricoPrecios = 3,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 3,
                            PrecioVenta = 38500f
                        },
                        new
                        {
                            IdHistoricoPrecios = 4,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 4,
                            PrecioVenta = 50000f
                        },
                        new
                        {
                            IdHistoricoPrecios = 5,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 5,
                            PrecioVenta = 70000f
                        },
                        new
                        {
                            IdHistoricoPrecios = 6,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 7,
                            PrecioVenta = 55000f
                        },
                        new
                        {
                            IdHistoricoPrecios = 7,
                            Estado = 1,
                            FechaPrecioFinal = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrecioInicial = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 7,
                            PrecioVenta = 42000f
                        });
                });

            modelBuilder.Entity("Entities.Models.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMetodoPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFacturaVenta")
                        .HasColumnType("int");

                    b.Property<string>("NombrePlataforma")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdMetodoPago");

                    b.HasIndex("IdFacturaVenta");

                    b.ToTable("MetodoPagos");

                    b.HasData(
                        new
                        {
                            IdMetodoPago = 1,
                            FechaTransaccion = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdFacturaVenta = 1,
                            NombrePlataforma = "Nequi",
                            Tipo = 2
                        },
                        new
                        {
                            IdMetodoPago = 2,
                            FechaTransaccion = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdFacturaVenta = 2,
                            NombrePlataforma = "Daviplata",
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.Perdida", b =>
                {
                    b.Property<int>("IdPerdida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPerdida");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerdida"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPerdida")
                        .HasColumnType("datetime2");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("IdPerdida");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Perdida");

                    b.HasData(
                        new
                        {
                            IdPerdida = 1,
                            EmpleadoId = 1,
                            Estado = 1,
                            FechaPerdida = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 300000f
                        },
                        new
                        {
                            IdPerdida = 2,
                            EmpleadoId = 2,
                            Estado = 2,
                            FechaPerdida = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 200000f
                        },
                        new
                        {
                            IdPerdida = 3,
                            EmpleadoId = 3,
                            Estado = 2,
                            FechaPerdida = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 350000f
                        },
                        new
                        {
                            IdPerdida = 4,
                            EmpleadoId = 4,
                            Estado = 1,
                            FechaPerdida = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 500000f
                        },
                        new
                        {
                            IdPerdida = 5,
                            EmpleadoId = 5,
                            Estado = 1,
                            FechaPerdida = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 100000f
                        });
                });

            modelBuilder.Entity("Entities.Models.Perdida_Producto", b =>
                {
                    b.Property<int>("IdPerdida")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<float>("PrecioUnitario")
                        .HasColumnType("real");

                    b.HasKey("IdPerdida", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("Perdida_Productos");

                    b.HasData(
                        new
                        {
                            IdPerdida = 1,
                            IdProducto = 1,
                            Cantidad = 5,
                            Motivo = "Robo",
                            PrecioUnitario = 30000f
                        },
                        new
                        {
                            IdPerdida = 2,
                            IdProducto = 2,
                            Cantidad = 5,
                            Motivo = "Roto",
                            PrecioUnitario = 20000f
                        },
                        new
                        {
                            IdPerdida = 3,
                            IdProducto = 3,
                            Cantidad = 5,
                            Motivo = "Mal Estado",
                            PrecioUnitario = 35000f
                        },
                        new
                        {
                            IdPerdida = 4,
                            IdProducto = 4,
                            Cantidad = 5,
                            Motivo = "Daño",
                            PrecioUnitario = 50000f
                        },
                        new
                        {
                            IdPerdida = 5,
                            IdProducto = 5,
                            Cantidad = 5,
                            Motivo = "Perdida",
                            PrecioUnitario = 10000f
                        });
                });

            modelBuilder.Entity("Entities.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("OrigenMateriaPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            Color = "Blanco",
                            Descripcion = "Cama doble de madera",
                            Estado = 1,
                            IdCategoria = 1,
                            Nombre = "Cama doble",
                            Precio = 500000f,
                            Stock = 3,
                            Tipo = 2
                        },
                        new
                        {
                            IdProducto = 2,
                            Color = "Negro",
                            Descripcion = "Mesa de noche de estilo moderno",
                            Estado = 1,
                            IdCategoria = 2,
                            Nombre = "Mesa de noche",
                            Precio = 150000f,
                            Stock = 5,
                            Tipo = 2
                        },
                        new
                        {
                            IdProducto = 3,
                            Color = "Marrón",
                            Descripcion = "Comedor de madera con capacidad para 6 personas",
                            Estado = 1,
                            IdCategoria = 3,
                            Nombre = "Comedor extensible",
                            Precio = 800000f,
                            Stock = 2,
                            Tipo = 1
                        },
                        new
                        {
                            IdProducto = 4,
                            Color = "Gris",
                            Descripcion = "Silla cómoda con soporte lumbar",
                            Estado = 1,
                            IdCategoria = 4,
                            Nombre = "Silla ergonómica",
                            Precio = 250000f,
                            Stock = 8,
                            Tipo = 2
                        },
                        new
                        {
                            IdProducto = 5,
                            Color = "Blanco",
                            Descripcion = "Escritorio de diseño minimalista",
                            Estado = 1,
                            IdCategoria = 5,
                            Nombre = "Escritorio moderno",
                            Precio = 350000f,
                            Stock = 4,
                            Tipo = 1
                        },
                        new
                        {
                            IdProducto = 6,
                            Color = "Café",
                            Descripcion = "Armario espacioso con compartimentos",
                            Estado = 1,
                            IdCategoria = 6,
                            Nombre = "Armario de 4 puertas",
                            Precio = 700000f,
                            Stock = 1,
                            Tipo = 1
                        },
                        new
                        {
                            IdProducto = 7,
                            Color = "Azul",
                            Descripcion = "Camarote con temática de caricaturas",
                            Estado = 1,
                            IdCategoria = 7,
                            Nombre = "Camarote infantil",
                            Precio = 450000f,
                            Stock = 6,
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            IdProveedor = 1,
                            Estado = 1,
                            RazonSocial = "La Guitarra, S.A"
                        },
                        new
                        {
                            IdProveedor = 2,
                            Estado = 1,
                            RazonSocial = "Sol Dorado"
                        },
                        new
                        {
                            IdProveedor = 3,
                            Estado = 1,
                            RazonSocial = "Marena"
                        },
                        new
                        {
                            IdProveedor = 4,
                            Estado = 1,
                            RazonSocial = "Juguetes Vikingos"
                        },
                        new
                        {
                            IdProveedor = 5,
                            Estado = 2,
                            RazonSocial = "Lima & Álvarez"
                        },
                        new
                        {
                            IdProveedor = 6,
                            Estado = 1,
                            RazonSocial = "Arcos Dorados, C.A"
                        },
                        new
                        {
                            IdProveedor = 7,
                            Estado = 1,
                            RazonSocial = "Carlos Fernández, E.I.R"
                        },
                        new
                        {
                            IdProveedor = 8,
                            Estado = 1,
                            RazonSocial = "Chascomús, S.A"
                        },
                        new
                        {
                            IdProveedor = 9,
                            Estado = 2,
                            RazonSocial = "Grupo Fernández S.A"
                        });
                });

            modelBuilder.Entity("Entities.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Cargo")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Llave")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("NumDocumento")
                        .HasColumnType("int");

                    b.Property<string>("PrimApellido")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PrimNombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SegApellido")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SegNombre")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Cargo = "Administrador",
                            Contrasena = "",
                            Estado = 1,
                            FechaContrato = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaFin = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2000, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Llave = "ADSO2558108",
                            NumDocumento = 1019762822,
                            PrimApellido = "Marin",
                            PrimNombre = "Kevin",
                            SegApellido = "Hoyos",
                            SegNombre = "Alejandro",
                            Sexo = "Masculino",
                            TipoDocumento = "C.C",
                            TipoUsuario = 1
                        },
                        new
                        {
                            IdUsuario = 2,
                            Cargo = "Carpintero",
                            Contrasena = "",
                            Estado = 1,
                            FechaContrato = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaFin = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2000, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Llave = "ADSO2558108",
                            NumDocumento = 1013100300,
                            PrimApellido = "Sarmiento",
                            PrimNombre = "Miguel",
                            SegApellido = "Mojica",
                            SegNombre = "Angel",
                            Sexo = "Masculino",
                            TipoDocumento = "C.C",
                            TipoUsuario = 1
                        },
                        new
                        {
                            IdUsuario = 3,
                            Cargo = "Supervisor de Producción",
                            Contrasena = "",
                            Estado = 1,
                            FechaContrato = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaFin = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2000, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Llave = "ADSO2558108",
                            NumDocumento = 1025445665,
                            PrimApellido = "Ramirez",
                            PrimNombre = "David",
                            SegApellido = "Martin",
                            SegNombre = "Felipe",
                            Sexo = "Masculino",
                            TipoDocumento = "C.C",
                            TipoUsuario = 1
                        },
                        new
                        {
                            IdUsuario = 4,
                            Cargo = "Asistente de carpinteria",
                            Contrasena = "",
                            Estado = 1,
                            FechaContrato = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaFin = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2000, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Llave = "ADSO2558108",
                            NumDocumento = 1013265449,
                            PrimApellido = "Velez",
                            PrimNombre = "Maria",
                            SegApellido = "Wedderburn",
                            SegNombre = "Fernanda",
                            Sexo = "Femenino",
                            TipoDocumento = "C.C",
                            TipoUsuario = 1
                        },
                        new
                        {
                            IdUsuario = 5,
                            Cargo = "Encargado de almacén",
                            Contrasena = "",
                            Estado = 1,
                            FechaContrato = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaFin = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaNacimiento = new DateTime(2000, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRegistro = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Llave = "ADSO2558108",
                            NumDocumento = 1016598778,
                            PrimApellido = "Rivera",
                            PrimNombre = "Lizeth",
                            SegApellido = "Ruiz",
                            SegNombre = "Valeria",
                            Sexo = "Femenino",
                            TipoDocumento = "C.C",
                            TipoUsuario = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.ContactoEmpleado", b =>
                {
                    b.HasOne("Entities.Models.Empleado", "Empleado")
                        .WithMany("ContactoEmpleados")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Entities.Models.ContactoProveedor", b =>
                {
                    b.HasOne("Entities.Models.Proveedor", "Proveedor")
                        .WithMany("contactoProveedors")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Entities.Models.ContactoUsuario", b =>
                {
                    b.HasOne("Entities.Models.Usuario", "Usuario")
                        .WithMany("contactoUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Models.DetalleFacturaCompra", b =>
                {
                    b.HasOne("Entities.Models.FacturaCompra", "FacturaCompra")
                        .WithMany("DetalleFacturaCompras")
                        .HasForeignKey("IdFacturaCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany("detalleFacturaCompras")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturaCompra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Entities.Models.DetalleFacturaVenta", b =>
                {
                    b.HasOne("Entities.Models.FacturaCompra", null)
                        .WithMany("detalleFacturaVentas")
                        .HasForeignKey("FacturaCompraIdFacturaCompra");

                    b.HasOne("Entities.Models.FacturaVenta", "FacturasVenta")
                        .WithMany("DetalleFacturaVentas")
                        .HasForeignKey("FacturasVentaIdFacturaVenta");

                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany("detalleFacturaVentas")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturasVenta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Entities.Models.EmpleadoCargo", b =>
                {
                    b.HasOne("Entities.Models.Cargo", "Cargo")
                        .WithMany("EmpleadoCargos")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Empleado", "Empleado")
                        .WithMany("EmpleadoCargos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Entities.Models.FacturaCompra", b =>
                {
                    b.HasOne("Entities.Models.Proveedor", "Proveedores")
                        .WithMany("facturaCompras")
                        .HasForeignKey("ProveedoresIdProveedor");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Entities.Models.FacturaVenta", b =>
                {
                    b.HasOne("Entities.Models.Usuario", "Usuarios")
                        .WithMany("facturaVentas")
                        .HasForeignKey("UsuariosIdUsuario");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entities.Models.HistoricoPrecios", b =>
                {
                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany("HistoricoPrecios")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Entities.Models.MetodoPago", b =>
                {
                    b.HasOne("Entities.Models.FacturaVenta", "FacturaVenta")
                        .WithMany("MetodoPago")
                        .HasForeignKey("IdFacturaVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturaVenta");
                });

            modelBuilder.Entity("Entities.Models.Perdida", b =>
                {
                    b.HasOne("Entities.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Entities.Models.Perdida_Producto", b =>
                {
                    b.HasOne("Entities.Models.Perdida", "Perdida")
                        .WithMany("perdida_Productos")
                        .HasForeignKey("IdPerdida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany("perdida_Productos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perdida");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Entities.Models.Producto", b =>
                {
                    b.HasOne("Entities.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Entities.Models.Cargo", b =>
                {
                    b.Navigation("EmpleadoCargos");
                });

            modelBuilder.Entity("Entities.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Entities.Models.Empleado", b =>
                {
                    b.Navigation("ContactoEmpleados");

                    b.Navigation("EmpleadoCargos");
                });

            modelBuilder.Entity("Entities.Models.FacturaCompra", b =>
                {
                    b.Navigation("DetalleFacturaCompras");

                    b.Navigation("detalleFacturaVentas");
                });

            modelBuilder.Entity("Entities.Models.FacturaVenta", b =>
                {
                    b.Navigation("DetalleFacturaVentas");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("Entities.Models.Perdida", b =>
                {
                    b.Navigation("perdida_Productos");
                });

            modelBuilder.Entity("Entities.Models.Producto", b =>
                {
                    b.Navigation("HistoricoPrecios");

                    b.Navigation("detalleFacturaCompras");

                    b.Navigation("detalleFacturaVentas");

                    b.Navigation("perdida_Productos");
                });

            modelBuilder.Entity("Entities.Models.Proveedor", b =>
                {
                    b.Navigation("contactoProveedors");

                    b.Navigation("facturaCompras");
                });

            modelBuilder.Entity("Entities.Models.Usuario", b =>
                {
                    b.Navigation("contactoUsuarios");

                    b.Navigation("facturaVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
